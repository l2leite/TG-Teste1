/***CRIAÇÃO DO BANCO DE DADOS***/

CREATE DATABASE IF NOT EXISTS DB_TG_TESTE;
USE DB_TG_TESTE;


/***CRIAÇÃO DA TABELA PESSOA***/

CREATE TABLE IF NOT EXISTS TBL_PESSOA(
	PES_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	PES_NOME VARCHAR(50) NOT NULL,
	PES_CPF VARCHAR(11) NOT NULL UNIQUE,
	PES_RG VARCHAR(10),
	PES_DATANASCIMENTO DATE NOT NULL,
	PES_EMAIL VARCHAR(50),
	PES_NASCIONALIDADE VARCHAR(15) DEFAULT("Brasileira"));


/***CRIAÇÃO DA TABELA TELEFONE***/

CREATE TABLE IF NOT EXISTS TBL_TELEFONE(
	TEL_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	TEL_CODIGOPAIS VARCHAR(5) DEFAULT('55'),
	TEL_CODIGOREGIAO VARCHAR(5) DEFAULT('12'),
	TEL_TELEFONE VARCHAR(9) NOT NULL);


/***CRIAÇÃO TABELA ENDEREÇO***/

CREATE TABLE IF NOT EXISTS TBL_ENDERECO(
	END_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	END_LOGADOURO VARCHAR(50),
	END_NUMERO VARCHAR(6),
	END_COMPLEMENTO VARCHAR(50),
	END_BAIRRO VARCHAR(25),
	END_CIDADE VARCHAR(25),
	END_ESTADO VARCHAR(25) DEFAULT("São Paulo"),
	END_CODIGOPOSTAL VARCHAR(10),
	END_PAIS VARCHAR(25) DEFAULT("Brasil"));


/***CRIAÇÃO TABELA CLIENTE***/

CREATE TABLE IF NOT EXISTS TBL_CLIENTE(
	CLI_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	CLI_CODIGOPES INTEGER NOT NULL UNIQUE,
	CONSTRAINT FK_CLI_CODIGOPESSOA FOREIGN KEY(CLI_CODIGOPES) REFERENCES TBL_PESSOA(PES_CODIGO),
	CLI_LOGIN VARCHAR(25) UNIQUE NOT NULL,
	CLI_SENHA VARCHAR(25) NOT NULL,
	CLI_DATAHORACADASTRO DATETIME NOT NULL,
	CLI_STATUS VARCHAR(10),
	CLI_SALDO DECIMAL(7,2));


/***CRIAÇÃO TABELA PESSOA JURIDICA***/

CREATE TABLE IF NOT EXISTS TBL_PESSOAJURIDICA(
	PEJ_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	PEJ_RAZAOSOCIAL VARCHAR(50) NOT NULL,
	PEJ_CNPJ VARCHAR(14) NOT NULL UNIQUE,
	PEJ_IE VARCHAR(25),
	PEJ_IM VARCHAR(10),
	PEJ_DATAABERTURA DATE,
	PEJ_CONTATO VARCHAR(15),
	PEJ_EMAIL VARCHAR(50));


/***CRIAÇÃO TABELA FUNÇÃO***/

CREATE TABLE IF NOT EXISTS TBL_FUNCAO(
	FNC_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	FNC_NOME VARCHAR(25) NOT NULL UNIQUE,
	FNC_DESCRICAO TEXT,
	FNC_DEPARTAMENTO VARCHAR(25),
	FNC_PERMISSAO VARCHAR(50) NOT NULL);

/***CRIAÇÃO TABELA FUNCIONARIO***/

CREATE TABLE IF NOT EXISTS TBL_FUNCIONARIO(
	FUN_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	FUN_CODIGOPES INTEGER NOT NULL,
	CONSTRAINT FK_FUN_CODIGOPES FOREIGN KEY(FUN_CODIGOPES) REFERENCES TBL_PESSOA(PES_CODIGO),
	FUN_CODIGOFNC INTEGER NOT NULL,
	CONSTRAINT FK_FUN_CODIGOFNC FOREIGN KEY(FUN_CODIGOFNC) REFERENCES TBL_FUNCAO(FNC_CODIGO),
	FUN_LOGIN VARCHAR(25) NOT NULL UNIQUE,
	FUN_SENHA VARCHAR(25) NOT NULL,
	FUN_DATAINICIO DATE NOT NULL,
	FUN_SALARIO DECIMAL(7,2) NOT NULL);


/***CRIAÇÃO TABELA NOTA FISCAL ELETRÔNICA***/

CREATE TABLE IF NOT EXISTS TBL_NFE(
	NFE_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	NFE_CODIGOEMISSOR INTEGER,
	CONSTRAINT FK_NFE_CODIGOEMISSOR FOREIGN KEY(NFE_CODIGOEMISSOR) REFERENCES TBL_PESSOAJURIDICA(PEJ_CODIGO),
	NFE_CODIGODESTINATARIO INTEGER,
	CONSTRAINT FK_NFE_CODIGODESTINATARIO FOREIGN KEY(NFE_CODIGODESTINATARIO) REFERENCES TBL_PESSOAJURIDICA(PEJ_CODIGO),
	NFE_NUMERO INTEGER NOT NULL,
	NFE_NATUREZA VARCHAR(50),
	NFE_DATAHORAEMISSAO DATETIME,
	NFE_DATAHORASAIDA DATETIME,
	NFE_VALORTOTALNFE DECIMAL(8,2));


/***CRIAÇÃO TABELA CONTATO***/

CREATE TABLE IF NOT EXISTS TBL_CONTATO(
	CTT_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	CTT_CODIGOPES INTEGER NOT NULL,
	CONSTRAINT FK_CTT_CODIGOPES FOREIGN KEY(CTT_CODIGOPES) REFERENCES TBL_PESSOA(PES_CODIGO),
	CTT_TIPO VARCHAR(10),
	CTT_REDESOCIAL VARCHAR(15) NOT NULL,
	CTT_USUARIO VARCHAR(50) NOT NULL);


/***CRIAÇÃO TABELA CARTÃO***/

CREATE TABLE IF NOT EXISTS TBL_CARTAO(
	CRT_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	CRT_CHAVE TEXT UNIQUE NOT NULL,
	CRT_SENHA INTEGER NOT NULL);


/***CRIAÇÃO TABELA EVENTO***/

CREATE TABLE IF NOT EXISTS TBL_EVENTO(
	EVE_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	EVE_NOME VARCHAR(25) NOT NULL,
	EVE_DATA DATE NOT NULL,
	EVE_ORGANIZADOR VARCHAR(15),
	EVE_PUBLICO INTEGER,
	EVE_FATURAMENTO DECIMAL(8,2)
	EVE_DATAHORAINICIO DATETIME,
	EVE_DATAHORATERMINO DATETIME);


/***CRIAÇÃO TABELA PRODUTO***/

CREATE TABLE IF NOT EXISTS TBL_PRODUTO(
	PDT_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	PDT_CODIGONCM INTEGER NOT NULL,
	PDT_NOME VARCHAR(25) NOT NULL,
	PDT_NOMEFABRICANTE VARCHAR(25),
	PDT_TIPO VARCHAR(10));


/***CRIAÇÃO TABELA ESTOQUE***/

CREATE TABLE IF NOT EXISTS TBL_ESTOQUE(
	EST_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	EST_CODIGOPDT INTEGER NOT NULL,
	CONSTRAINT FK_EST_CODIGOPDT FOREIGN KEY(EST_CODIGOPDT) REFERENCES TBL_PRODUTO(PDT_CODIGO),
	EST_ID VARCHAR(25) NOT NULL,
	EST_UNIDADE VARCHAR(10),
	EST_SALDO DECIMAL(10,5),
	EST_VALOR DECIMAL(8,2));


/***CRIAÇÃO TABELA RECARGA***/

CREATE TABLE IF NOT EXISTS TBL_RECARGA(
	REC_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	REC_CODIGOCLI INTEGER NOT NULL,
	CONSTRAINT FK_REC_CODIGOCLI FOREIGN KEY(REC_CODIGOCLI) REFERENCES TBL_CLIENTE(CLI_CODIGO),
	REC_CODIGOFUN INTEGER NOT NULL,
	CONSTRAINT FK_REC_CODIGOFUN FOREIGN KEY(REC_CODIGOFUN) REFERENCES TBL_FUNCIONARIO(FUN_CODIGO),
	REC_FORMAPAGAMENTO VARCHAR(20) NOT NULL,
	REC_VALOR DECIMAL(7,2) NOT NULL,
	REC_DATAHORA DATETIME);


/***CRIAÇÃO TABELA VINCULO CLIENTE CARTÃO***/

CREATE TABLE IF NOT EXISTS TBL_VINCULOCRTCLI(
	VCC_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	VCC_CODIGOCRT INTEGER NOT NULL,
	CONSTRAINT FK_VCC_CODIGOCRT FOREIGN KEY(VCC_CODIGOCRT) REFERENCES TBL_CARTAO(CRT_CODIGO),
	VCC_CODIGOCLI INTEGER NOT NULL,
	CONSTRAINT FK_VCC_CODIGOCLI FOREIGN KEY(VCC_CODIGOCLI) REFERENCES TBL_CLIENTE(CLI_CODIGO),
	VCC_DATAHORAINICIO DATETIME,
	VCC_DATAHORATERMINO DATETIME,
	VCC_STATUS VARCHAR(7) DEFAULD (“Ativo”));


/***CRIAÇÃO TABELA VINCULO CLIENTE EVENTO***/

CREATE TABLE IF NOT EXISTS TBL_VINCULOEVEVCC(
	VEC_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	VEC_CODIGOVCC INTEGER NOT NULL,
	CONSTRAINT FK_VEC_CODIGOVCC FOREIGN KEY(VEC_CODIGOVCC) REFERENCES TBL_VINCULOCARTAOCLIENTE(VCC_CODIGO),
	VEC_CODIGOEVE INTEGER NOT NULL,
	CONSTRAINT FK_VEC_CODIGOEVE FOREIGN KEY(VEC_CODIGOEVE) REFERENCES TBL_EVENTO(EVE_CODIGO),
	VEC_DATAHORAINICIO DATETIME,
	VEC_DATAHORATERMINO DATETIME);


/***CRIAÇÃO TABELA ORDEM DE VENDA***/

CREATE TABLE IF NOT EXISTS TBL_ORDEMVENDA(
	OPV_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	OPV_CODIGOPDT INTEGER NOT NULL,
	CONSTRAINT FK_OPV_CODIGOPDT FOREIGN KEY(OPV_CODIGOPDT) REFERENCES TBL_PRODUTO(PDT_CODIGO),
	OPV_CODIGOEVE INTEGER NOT NULL,
	CONSTRAINT FK_OPV_CODIGOEVE FOREIGN KEY(OPV_CODIGOEVE) REFERENCES TBL_EVENTO(EVE_CODIGO),
	OPV_CODIGOFUN INTEGER NOT NULL,
	CONSTRAINT FK_OPV_CODIGOFUN FOREIGN KEY(OPV_CODIGOFUN) REFERENCES TBL_FUNCIONARIO(FUN_CODIGO),
	OPV_OBSERVACAO VARCHAR(25),
	OPV_DATAHORA DATETIME,
	OPV_QUANTIDADE INTEGER,
	OPV_VALOR DECIMAL(8,2));


/***CRIAÇÃO TABELA RELAÇÃO CLIENTE ORDEM DE VENDA***/

CREATE TABLE IF NOT EXISTS TBL_RELACAOCLIODV(
	RCO_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	RCO_CODIGOVCC INTEGER NOT NULL,
	CONSTRAINT FK_RCO_CODIGOVCC FOREIGN KEY(RCO_CODIGOVCC) REFERENCES TBL_VINCULOCARTAOCLIENTE(VCC_CODIGO),
	RCO_CODIGOODV INTEGER NOT NULL,
	CONSTRAINT FK_RCO_CODIGOODV FOREIGN KEY(RCO_CODIGOODV) REFERENCES TBL_ORDEMVENDA(ODV_CODIGO),
	RCO_VALOR DECIMAL(7,2),
	RCO_DATAHORA DATETIME);


/***CRIAÇÃO TABELA ORDEM DE COMPRA***/

CREATE TABLE IF NOT EXISTS TBL_ORDEMOCOMPRA(
	ODC_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	ODC_CODIGOPDT INTEGER NOT NULL,
	CONSTRAINT FK_ODC_CODIGOPDT FOREIGN KEY(ODC_CODIGOPDT) REFERENCES TBL_PRODUTO(PDT_CODIGO),
	ODC_CODIGOPEJ INTEGER NOT NULL,
	CONSTRAINT FK_ODC_CODIGOPEJ FOREIGN KEY(ODC_CODIGOPEJ) REFERENCES TBL_PESSOAJURIDICA(PEJ_CODIGO),
	ODC_CODIGOFUN INTEGER NOT NULL,
	CONSTRAINT FK_ODC_CODIGOFUN FOREIGN KEY(ODC_CODIGOFUN) REFERENCES TBL_FUNCIONARIO(FUN_CODIGO),
	ODC_OBSERVACAO VARCHAR(25),
	ODC_DATAHORASOLICITADA DATETIME,
	ODC_UNIDADE VARCHAR(10),
	ODC_QUANTIDADE DECIMAL(10,5),
	ODC_VALOR DECIMAL(8,2),
	ODC_PREVISAOCHEGADA DATE);


/***CRIAÇÃO DA TABELA DE RELACIONAMENTO ENTRE PESSOA-TELEFONE***/

CREATE TABLE TBL_RELACAOPESTEL(
	RPT_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	RPT_CODIGOPES INTEGER NOT NULL,
	CONSTRAINT FK_RPT_CODIGOPES FOREIGN KEY(RPT_CODIGOPES) REFERENCES TBL_PESSOA(PES_CODIGO),
	RPT_CODIGOTEL INTEGER NOT NULL,
	CONSTRAINT FK_RPT_CODIGOTEL FOREIGN KEY(RPT_CODIGOTEL) REFERENCES TBL_TELEFONE(TEL_CODIGO),
	RPT_TIPO VARCHAR(10) DEFAULT('Celular'));

/***CRIAÇÃO DA TABELA DE RELACIONAMENTO ENTRE PESSOAJURIDICA-TELEFONE***/

CREATE TABLE TBL_RELACAOPESSOAJURIDICATELEFONE(
	RFT_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	RFT_CODIGOPEJ INTEGER NOT NULL,
	CONSTRAINT FK_RFT_CODIGOPEJ FOREIGN KEY(RFT_CODIGOPEJ) REFERENCES TBL_PESSOAJURIDICA(PEJ_CODIGO),
	RFT_CODIGOTEL INTEGER NOT NULL,
	CONSTRAINT FK_RFT_CODIGOTEL FOREIGN KEY(RFT_CODIGOTEL) REFERENCES TBL_TELEFONE(TEL_CODIGO),
	RFT_TIPO VARCHAR(10));


/***CRIAÇÃO DA TABELA DE RELACIONAMENTO ENTRE ENDEREÇO-PESSOA***/

CREATE TABLE IF NOT EXISTS TBL_RELACAOENDPES(
	REP_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	REP_CODIGOPES INTEGER NOT NULL,
	CONSTRAINT FK_REP_CODIGOPES FOREIGN KEY(REP_CODIGOPES) REFERENCES TBL_PESSOA(PES_CODIGO),
	REP_CODIGOEND INTEGER NOT NULL,
	CONSTRAINT FK_REP_CODIGOEND FOREIGN KEY(REP_CODIGOEND) REFERENCES TBL_ENDERECO(END_CODIGO),
	REP_TIPO VARCHAR(10));


/***CRIAÇÃO DA TABELA DE RELACIONAMENTO ENTRE ENDEREÇO-PESSOAJURIDICA***/

CREATE TABLE IF NOT EXISTS TBL_RELACAOENDPEJ(
	REF_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	REF_CODIGOPEJ INTEGER NOT NULL,
	CONSTRAINT FK_REF_CODIGOPEJ FOREIGN KEY(REF_CODIGOPEJ) REFERENCES TBL_PESSOAJURIDICA(PEJ_CODIGO),
	REF_CODIGOEND INTEGER NOT NULL,
	CONSTRAINT FK_REF_CODIGOEND FOREIGN KEY(REF_CODIGOEND) REFERENCES TBL_ENDERECO(END_CODIGO),
	REF_TIPO VARCHAR(10));


/***CRIAÇÃO TABELA ORDEM DE EXPEDIÇÃO***/

CREATE TABLE IF NOT EXISTS TBL_ORDEMEXPEDICAO(
	ODE_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	ODE_CODIGOPDT INTEGER NOT NULL,
	CONSTRAINT FK_ODE_CODIGOPDT FOREIGN KEY(ODE_CODIGOPDT) REFERENCES TBL_PRODUTO(PDT_CODIGO),
	ODE_CODIGOODV INTEGER NOT NULL,
	CONSTRAINT FK_ODE_CODIGOODV FOREIGN KEY(ODE_CODIGOODV) REFERENCES TBL_ORDEMVENDA(ODV_CODIGO),
	ODE_CODIGOFUN INTEGER NOT NULL,
	CONSTRAINT FK_ODE_CODIGOFUN FOREIGN KEY(ODE_CODIGOFUN) REFERENCES TBL_FUNCIONARIO(FUN_CODIGO),
	ODE_OBSERVACAO VARCHAR(25),
	ODE_DATAHORASAIDA DATETIME,
	ODE_UNIDADE VARCHAR(10),
	ODE_QUANTIDADE DECIMAL(10,5),
	ODE_VALOR DECIMAL(8,2));


/***CRIAÇÃO TABELA ORDEM DE RECEBIMENTO***/

CREATE TABLE IF NOT EXISTS TBL_ORDEMRECEBIMENTO(
	ODR_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	ODR_CODIGOPDT INTEGER NOT NULL,
	CONSTRAINT FK_ODR_CODIGOPDT FOREIGN KEY(ODR_CODIGOPDT) REFERENCES TBL_PRODUTO(PDT_CODIGO),
	ODR_CODIGOODC INTEGER NOT NULL,
	CONSTRAINT FK_ODR_CODIGOODC FOREIGN KEY(ODR_CODIGOODC) REFERENCES TBL_ORDEMCOMPRA(ODC_CODIGO),
	ODR_CODIGOFUN INTEGER NOT NULL,
	CONSTRAINT FK_ODR_CODIGOFUN FOREIGN KEY(ODR_CODIGOFUN) REFERENCES TBL_FUNCIONARIO(FUN_CODIGO),
	ODR_OBSERVACAO VARCHAR(25),
	ODR_DATAHORACHEGADA DATETIME,
	ODR_UNIDADE VARCHAR(10),
	ODR_QUANTIDADE DECIMAL(10,5),
	ODR_VALOR DECIMAL(8,2));


/***CRIAÇÃO TABELA ITEM DA NOTA FISCAL ELETRÔNICA***/

CREATE TABLE IF NOT EXISTS TBL_ITEMNFE(
	INF_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	INF_CODIGOPDT INTEGER NOT NULL,
	CONSTRAINT FK_INF_CODIGOPDT FOREIGN KEY(INF_CODIGOPDT) REFERENCES TBL_PRODUTO(PDT_CODIGO),
	INF_CODIGONFE INTEGER NOT NULL,
	CONSTRAINT FK_INF_CODIGONFE FOREIGN KEY(INF_CODIGONFE) REFERENCES TBL_NOTAFISCALELETRÔNICA(NFE_CODIGO),
	INF_NUMERO INTEGER,
	INF_UNIDADES VARCHAR(10),
	INF_QUANTIDADE DECIMAL(18,9),
	INF_VALORUNIT DECIMAL(20,10),
	INF_VALORPRODUTO DECIMAL(8,2));


/***CRIAÇÃO TABELA ORDEM DE PRODUÇÃO E ESTOQUE***/

CREATE TABLE IF NOT EXISTS TBL_ORDEMPRODUCAOESTOQUE(
	OPE_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	OPE_CODIGOPDT INTEGER NOT NULL,
	CONSTRAINT FK_OPE_CODIGOPDT FOREIGN KEY(OPE_CODIGOPDT) REFERENCES TBL_PRODUTO(PDT_CODIGO),
	OPE_CODIGOFUN INTEGER NOT NULL,
	CONSTRAINT FK_OPE_CODIGOFUN FOREIGN KEY(OPE_CODIGOFUN) REFERENCES TBL_FUNCIONARIO(FUN_CODIGO),
	OPE_DATAHORA INTEGER,
	OPE_UNIDADE VARCHAR(10),
	OPE_QUANTIDADE DECIMAL(20,10),
	OPE_VALOR DECIMAL(8,2),
	OPE_OBSERVACAO VARCHAR(25));


/***CRIAÇÃO TABELA FORMULAÇÃO***/

CREATE TABLE IF NOT EXISTS TBL_FORMULACAO(
	FML_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	FML_CODIGOPDT INTEGER NOT NULL,
	CONSTRAINT FK_FML_CODIGOPDT FOREIGN KEY(FML_CODIGOPDT) REFERENCES TBL_PRODUTO(PDT_CODIGO),
	FML_CODIGOOPE INTEGER NOT NULL,
	CONSTRAINT FK_FML_CODIGOOPE FOREIGN KEY(FML_CODIGOOPE) REFERENCES TBL_ORDEMPRODUCAOESTOQUE(OPE_CODIGO),
	FML_UNIDADE VARCHAR(10),
	FML_PORCENTAGEM DECIMAL(10,5),
	FML_FUNCAO VARCHAR(10),
	FML_PROCESSO TEXT);


/***CRIAÇÃO TABELA ITEM DA FORMULAÇÃO***/

CREATE TABLE IF NOT EXISTS TBL_ITEMFORMULACAO(
	IFO_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	IFO_CODIGOPDT INTEGER NOT NULL,
	CONSTRAINT FK_IFO_CODIGOPDT FOREIGN KEY(IFO_CODIGOPDT) REFERENCES TBL_PRODUTO(PDT_CODIGO),
	IFO_CODIGOFML INTEGER NOT NULL,
	CONSTRAINT FK_IFO_CODIGOFML FOREIGN KEY(IFO_CODIGOFML) REFERENCES TBL_FORMULACAO(FML_CODIGO),
	IFO_UNIDADES VARCHAR(10),
	IFO_PORCENTAGEM DECIMAL(18,9));


/***CRIAÇÃO TABELA MOVIMENTO DO ESTOQUE***/

CREATE TABLE IF NOT EXISTS TBL_MOVIMENTOESTOQUE(
	MVE_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	MVE_CODIGOEST INTEGER NOT NULL,
	CONSTRAINT FK_MVE_CODIGOEST FOREIGN KEY(MVE_CODIGOEST) REFERENCES TBL_ESTOQUE(EST_CODIGO),
	MVE_CODIGOODR INTEGER DEFAULT NULL,
	CONSTRAINT FK_MVE_CODIGOODR FOREIGN KEY(MVE_CODIGOODR) REFERENCES TBL_ORDEMRECEBIMENTO(ODR_CODIGO),
	MVE_CODIGOODE INTEGER DEFAULT NULL,
	CONSTRAINT FK_MVE_CODIGOODE FOREIGN KEY(MVE_CODIGOODE) REFERENCES TBL_ORDEMEXPEDICAO(ODE_CODIGO),
	MVE_CODIGOOPE INTEGER DEFAULT NULL,
	CONSTRAINT FK_MVE_CODIGOOPE FOREIGN KEY(MVE_CODIGOOPE) REFERENCES TBL_ORDEMPRODUCAOESTOQUE(OPE_CODIGO),
	MVE_NATUREZA VARCHAR(10),
	MVE_ORIGEMOPERACAO VARCHAR(10),
	MVE_NUMCONTROLE INTEGER,
	MVE_UNIDADE VARCHAR(10),
	MVE_QUANTIDADE DECIMAL(20,10),
	MVE_VALOR DECIMAL(8,2),
	MVE_DATAHORA DATETIME,
	MVE_OBSERVACAO TEXT);


/***CRIAÇÃO TABELA RELAÇÃO NFE E MOVIMENTO DO ESTOQUE***/

CREATE TABLE IF NOT EXISTS TBL_RELACAONFEODM(
	RNO_CODIGO INTEGER PRIMARY KEY AUTO_INCREMENT,
	RNO_CODIGONFE INTEGER NOT NULL,
	CONSTRAINT FK_RNO_CODIGONFE FOREIGN KEY(RNO_CODIGONFE) REFERENCES TBL_NOTAFISCALELETRONICA(NFE_CODIGO),
	RNO_CODIGOMVE INTEGER NOT NULL,
	CONSTRAINT FK_RNO_CODIGOMVE FOREIGN KEY(RNO_CODIGOMVE) REFERENCES TBL_MOVIMENTOESTOQUE(MVE_CODIGO));
